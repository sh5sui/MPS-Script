local OrionLib = loadstring(game:HttpGet(('https://raw.githubusercontent.com/shlexware/Orion/main/source')))()

local Window = OrionLib:MakeWindow({Name = "MPS GUI", HidePremium = false, SaveConfig = true, ConfigFolder = "OrionTest"})

OrionLib:MakeNotification({
	Name = "NOTICE!",
	Content = "This script only works with Tackle E if you wish to change this tool and keybind contact the owner of the script.",
	Image = "",
	Time = 5
})

OrionLib:MakeNotification({
	Name = "NOTICE!",
	Content = "Check console for errors",
	Image = "",
	Time = 5
})

local Tab = Window:MakeTab({
	Name = "Main",
	Icon = "",
	PremiumOnly = false
})

local Section = Tab:AddSection({
	Name = "Ball Teleports"
})

Tab:AddButton({
	Name = "VCL",
	Callback = function()
      		print("button pressed")
  	end    
})

-- Script Settings
local distanceLimit = 7 -- Reach Distance / TP Distance
local key = Enum.KeyCode.E -- Button / Keybind
local ballName = "VCL" -- Ball Name (Found in dex explorer)
local tool = "Tackle" -- Tool

-- DON'T EDIT ANYTHING UNDER

local Players = game:GetService("Players")
local UserInputService = game:GetService("UserInputService")
local player = Players.LocalPlayer
local mouse = player:GetMouse()
local equippedConnection = nil
local equipped = false

local function onEquipped()
    if not equipped then
        equippedConnection = UserInputService.InputBegan:Connect(function(input, gameProcessed)
            if not gameProcessed then
                if input.KeyCode == key then
                    local character = player.Character
                    if character then
                        local humanoidRootPart = character:FindFirstChild("HumanoidRootPart")
                        if humanoidRootPart then
                            for _, child in ipairs(workspace.Balls:GetChildren()) do
                                if child.Name == ballName then
                                    if (child.Position - humanoidRootPart.Position).magnitude <= distanceLimit then
                                        child.CFrame = humanoidRootPart.CFrame
                                    end
                                end
                            end
                        end
                    end
                end
            end
        end)
        equipped = true
        print("Equipped Tool")
    end
end

local function onUnequipped()
    if equippedConnection then
        equippedConnection:Disconnect()
        equippedConnection = nil
    end
    equipped = false
    print("UnEquipped Tool")
end

player.Backpack.ChildAdded:Connect(function(child)
    if child.Name == tool then
        equipped = false
        onUnequipped()
        print("UnEquipped Tool")
    end
end)

player.Backpack.ChildRemoved:Connect(function(child)
    if child.Name == tool then
        onEquipped()
    end
end)

Tab:AddButton({
	Name = "PEFL",
	Callback = function()
      		print("button pressed")
  	end    
})

-- Script Settings
local distanceLimit = 7 -- Reach Distance / TP Distance
local key = Enum.KeyCode.E -- Button / Keybind
local ballName = "PEFL" -- Ball Name (Found in dex explorer)
local tool = "Tackle" -- Tool

-- DON'T EDIT ANYTHING UNDER

local Players = game:GetService("Players")
local UserInputService = game:GetService("UserInputService")
local player = Players.LocalPlayer
local mouse = player:GetMouse()
local equippedConnection = nil
local equipped = false

local function onEquipped()
    if not equipped then
        equippedConnection = UserInputService.InputBegan:Connect(function(input, gameProcessed)
            if not gameProcessed then
                if input.KeyCode == key then
                    local character = player.Character
                    if character then
                        local humanoidRootPart = character:FindFirstChild("HumanoidRootPart")
                        if humanoidRootPart then
                            for _, child in ipairs(workspace.Balls:GetChildren()) do
                                if child.Name == ballName then
                                    if (child.Position - humanoidRootPart.Position).magnitude <= distanceLimit then
                                        child.CFrame = humanoidRootPart.CFrame
                                    end
                                end
                            end
                        end
                    end
                end
            end
        end)
        equipped = true
        print("Equipped Tool")
    end
end

local function onUnequipped()
    if equippedConnection then
        equippedConnection:Disconnect()
        equippedConnection = nil
    end
    equipped = false
    print("UnEquipped Tool")
end

player.Backpack.ChildAdded:Connect(function(child)
    if child.Name == tool then
        equipped = false
        onUnequipped()
        print("UnEquipped Tool")
    end
end)

player.Backpack.ChildRemoved:Connect(function(child)
    if child.Name == tool then
        onEquipped()
    end
end)

Tab:AddButton({
	Name = "RFF",
	Callback = function()
      		print("button pressed")
  	end    
})

-- Script Settings
local distanceLimit = 7 -- Reach Distance / TP Distance
local key = Enum.KeyCode.E -- Button / Keybind
local ballName = "RFF" -- Ball Name (Found in dex explorer)
local tool = "Tackle" -- Tool

-- DON'T EDIT ANYTHING UNDER

local Players = game:GetService("Players")
local UserInputService = game:GetService("UserInputService")
local player = Players.LocalPlayer
local mouse = player:GetMouse()
local equippedConnection = nil
local equipped = false

local function onEquipped()
    if not equipped then
        equippedConnection = UserInputService.InputBegan:Connect(function(input, gameProcessed)
            if not gameProcessed then
                if input.KeyCode == key then
                    local character = player.Character
                    if character then
                        local humanoidRootPart = character:FindFirstChild("HumanoidRootPart")
                        if humanoidRootPart then
                            for _, child in ipairs(workspace.Balls:GetChildren()) do
                                if child.Name == ballName then
                                    if (child.Position - humanoidRootPart.Position).magnitude <= distanceLimit then
                                        child.CFrame = humanoidRootPart.CFrame
                                    end
                                end
                            end
                        end
                    end
                end
            end
        end)
        equipped = true
        print("Equipped Tool")
    end
end

local function onUnequipped()
    if equippedConnection then
        equippedConnection:Disconnect()
        equippedConnection = nil
    end
    equipped = false
    print("UnEquipped Tool")
end

player.Backpack.ChildAdded:Connect(function(child)
    if child.Name == tool then
        equipped = false
        onUnequipped()
        print("UnEquipped Tool")
    end
end)

player.Backpack.ChildRemoved:Connect(function(child)
    if child.Name == tool then
        onEquipped()
    end
end)

Tab:AddButton({
	Name = "VRF",
	Callback = function()
      		print("button pressed")
  	end    
})

-- Script Settings
local distanceLimit = 7 -- Reach Distance / TP Distance
local key = Enum.KeyCode.E -- Button / Keybind
local ballName = "VRF" -- Ball Name (Found in dex explorer)
local tool = "Tackle" -- Tool

-- DON'T EDIT ANYTHING UNDER

local Players = game:GetService("Players")
local UserInputService = game:GetService("UserInputService")
local player = Players.LocalPlayer
local mouse = player:GetMouse()
local equippedConnection = nil
local equipped = false

local function onEquipped()
    if not equipped then
        equippedConnection = UserInputService.InputBegan:Connect(function(input, gameProcessed)
            if not gameProcessed then
                if input.KeyCode == key then
                    local character = player.Character
                    if character then
                        local humanoidRootPart = character:FindFirstChild("HumanoidRootPart")
                        if humanoidRootPart then
                            for _, child in ipairs(workspace.Balls:GetChildren()) do
                                if child.Name == ballName then
                                    if (child.Position - humanoidRootPart.Position).magnitude <= distanceLimit then
                                        child.CFrame = humanoidRootPart.CFrame
                                    end
                                end
                            end
                        end
                    end
                end
            end
        end)
        equipped = true
        print("Equipped Tool")
    end
end

local function onUnequipped()
    if equippedConnection then
        equippedConnection:Disconnect()
        equippedConnection = nil
    end
    equipped = false
    print("UnEquipped Tool")
end

player.Backpack.ChildAdded:Connect(function(child)
    if child.Name == tool then
        equipped = false
        onUnequipped()
        print("UnEquipped Tool")
    end
end)

player.Backpack.ChildRemoved:Connect(function(child)
    if child.Name == tool then
        onEquipped()
    end
end)

Tab:AddButton({
	Name = "AIFA",
	Callback = function()
      		print("button pressed")
  	end    
})

-- Script Settings
local distanceLimit = 7 -- Reach Distance / TP Distance
local key = Enum.KeyCode.E -- Button / Keybind
local ballName = "AIFA" -- Ball Name (Found in dex explorer)
local tool = "Tackle" -- Tool

-- DON'T EDIT ANYTHING UNDER

local Players = game:GetService("Players")
local UserInputService = game:GetService("UserInputService")
local player = Players.LocalPlayer
local mouse = player:GetMouse()
local equippedConnection = nil
local equipped = false

local function onEquipped()
    if not equipped then
        equippedConnection = UserInputService.InputBegan:Connect(function(input, gameProcessed)
            if not gameProcessed then
                if input.KeyCode == key then
                    local character = player.Character
                    if character then
                        local humanoidRootPart = character:FindFirstChild("HumanoidRootPart")
                        if humanoidRootPart then
                            for _, child in ipairs(workspace.Balls:GetChildren()) do
                                if child.Name == ballName then
                                    if (child.Position - humanoidRootPart.Position).magnitude <= distanceLimit then
                                        child.CFrame = humanoidRootPart.CFrame
                                    end
                                end
                            end
                        end
                    end
                end
            end
        end)
        equipped = true
        print("Equipped Tool")
    end
end

local function onUnequipped()
    if equippedConnection then
        equippedConnection:Disconnect()
        equippedConnection = nil
    end
    equipped = false
    print("UnEquipped Tool")
end

player.Backpack.ChildAdded:Connect(function(child)
    if child.Name == tool then
        equipped = false
        onUnequipped()
        print("UnEquipped Tool")
    end
end)

player.Backpack.ChildRemoved:Connect(function(child)
    if child.Name == tool then
        onEquipped()
    end
end)

Tab:AddButton({
	Name = "VEF",
	Callback = function()
      		print("button pressed")
  	end    
})

-- Script Settings
local distanceLimit = 7 -- Reach Distance / TP Distance
local key = Enum.KeyCode.E -- Button / Keybind
local ballName = "VEF" -- Ball Name (Found in dex explorer)
local tool = "Tackle" -- Tool

-- DON'T EDIT ANYTHING UNDER

local Players = game:GetService("Players")
local UserInputService = game:GetService("UserInputService")
local player = Players.LocalPlayer
local mouse = player:GetMouse()
local equippedConnection = nil
local equipped = false

local function onEquipped()
    if not equipped then
        equippedConnection = UserInputService.InputBegan:Connect(function(input, gameProcessed)
            if not gameProcessed then
                if input.KeyCode == key then
                    local character = player.Character
                    if character then
                        local humanoidRootPart = character:FindFirstChild("HumanoidRootPart")
                        if humanoidRootPart then
                            for _, child in ipairs(workspace.Balls:GetChildren()) do
                                if child.Name == ballName then
                                    if (child.Position - humanoidRootPart.Position).magnitude <= distanceLimit then
                                        child.CFrame = humanoidRootPart.CFrame
                                    end
                                end
                            end
                        end
                    end
                end
            end
        end)
        equipped = true
        print("Equipped Tool")
    end
end

local function onUnequipped()
    if equippedConnection then
        equippedConnection:Disconnect()
        equippedConnection = nil
    end
    equipped = false
    print("UnEquipped Tool")
end

player.Backpack.ChildAdded:Connect(function(child)
    if child.Name == tool then
        equipped = false
        onUnequipped()
        print("UnEquipped Tool")
    end
end)

player.Backpack.ChildRemoved:Connect(function(child)
    if child.Name == tool then
        onEquipped()
    end
end)

Tab:AddButton({
	Name = "WFA",
	Callback = function()
      		print("button pressed")
  	end    
})

-- Script Settings
local distanceLimit = 7 -- Reach Distance / TP Distance
local key = Enum.KeyCode.E -- Button / Keybind
local ballName = "WFA" -- Ball Name (Found in dex explorer)
local tool = "Tackle" -- Tool

-- DON'T EDIT ANYTHING UNDER

local Players = game:GetService("Players")
local UserInputService = game:GetService("UserInputService")
local player = Players.LocalPlayer
local mouse = player:GetMouse()
local equippedConnection = nil
local equipped = false

local function onEquipped()
    if not equipped then
        equippedConnection = UserInputService.InputBegan:Connect(function(input, gameProcessed)
            if not gameProcessed then
                if input.KeyCode == key then
                    local character = player.Character
                    if character then
                        local humanoidRootPart = character:FindFirstChild("HumanoidRootPart")
                        if humanoidRootPart then
                            for _, child in ipairs(workspace.Balls:GetChildren()) do
                                if child.Name == ballName then
                                    if (child.Position - humanoidRootPart.Position).magnitude <= distanceLimit then
                                        child.CFrame = humanoidRootPart.CFrame
                                    end
                                end
                            end
                        end
                    end
                end
            end
        end)
        equipped = true
        print("Equipped Tool")
    end
end

local function onUnequipped()
    if equippedConnection then
        equippedConnection:Disconnect()
        equippedConnection = nil
    end
    equipped = false
    print("UnEquipped Tool")
end

player.Backpack.ChildAdded:Connect(function(child)
    if child.Name == tool then
        equipped = false
        onUnequipped()
        print("UnEquipped Tool")
    end
end)

player.Backpack.ChildRemoved:Connect(function(child)
    if child.Name == tool then
        onEquipped()
    end
end)

Tab:AddButton({
	Name = "URFL",
	Callback = function()
      		print("button pressed")
  	end    
})

-- Script Settings
local distanceLimit = 7 -- Reach Distance / TP Distance
local key = Enum.KeyCode.E -- Button / Keybind
local ballName = "URFL" -- Ball Name (Found in dex explorer)
local tool = "Tackle" -- Tool

-- DON'T EDIT ANYTHING UNDER

local Players = game:GetService("Players")
local UserInputService = game:GetService("UserInputService")
local player = Players.LocalPlayer
local mouse = player:GetMouse()
local equippedConnection = nil
local equipped = false

local function onEquipped()
    if not equipped then
        equippedConnection = UserInputService.InputBegan:Connect(function(input, gameProcessed)
            if not gameProcessed then
                if input.KeyCode == key then
                    local character = player.Character
                    if character then
                        local humanoidRootPart = character:FindFirstChild("HumanoidRootPart")
                        if humanoidRootPart then
                            local ball = workspace.Pitch.Balls:FindFirstChild(ballName)
                            if ball and (ball.Position - humanoidRootPart.Position).magnitude <= distanceLimit then
                                ball.CFrame = humanoidRootPart.CFrame
                            end
                        end
                    end
                end
            end
        end)
        equipped = true
        print("Equipped Tool")
    end
end

local function onUnequipped()
    if equippedConnection then
        equippedConnection:Disconnect()
        equippedConnection = nil
    end
    equipped = false
    print("Unequipped Tool")
end

player.Backpack.ChildAdded:Connect(function(child)
    if child.Name == tool then
        equipped = false
        onUnequipped()
        print("Unequipped Tool")
    end
end)

player.Backpack.ChildRemoved:Connect(function(child)
    if child.Name == tool then
        onEquipped()
    end
end)

Tab:AddButton({
	Name = "MMP",
	Callback = function()
      		print("button pressed")
  	end    
})

-- Script Settings
local distanceLimit = 7 -- Reach Distance / TP Distance
local key = Enum.KeyCode.E -- Button / Keybind
local ballName = "MPS" -- Ball Name (Found in dex explorer)
local tool = "Tackle" -- Tool

-- DON'T EDIT ANYTHING UNDER

local Players = game:GetService("Players")
local UserInputService = game:GetService("UserInputService")
local player = Players.LocalPlayer
local mouse = player:GetMouse()
local equippedConnection = nil
local equipped = false

local function onEquipped()
    if not equipped then
        equippedConnection = UserInputService.InputBegan:Connect(function(input, gameProcessed)
            if not gameProcessed then
                if input.KeyCode == key then
                    local character = player.Character
                    if character then
                        local humanoidRootPart = character:FindFirstChild("HumanoidRootPart")
                        if humanoidRootPart then
                            local ball = workspace.Pitch.Balls:FindFirstChild(ballName)
                            if ball and (ball.Position - humanoidRootPart.Position).magnitude <= distanceLimit then
                                ball.CFrame = humanoidRootPart.CFrame
                            end
                        end
                    end
                end
            end
        end)
        equipped = true
        print("Equipped Tool")
    end
end

local function onUnequipped()
    if equippedConnection then
        equippedConnection:Disconnect()
        equippedConnection = nil
    end
    equipped = false
    print("Unequipped Tool")
end

player.Backpack.ChildAdded:Connect(function(child)
    if child.Name == tool then
        equipped = false
        onUnequipped()
        print("Unequipped Tool")
    end
end)

player.Backpack.ChildRemoved:Connect(function(child)
    if child.Name == tool then
        onEquipped()
    end
end)

local Tab = Window:MakeTab({
	Name = "Firetouch",
	Icon = "",
	PremiumOnly = false
})

Tab:AddButton({
	Name = "MMP",
	Callback = function()
      		print("In Development!")
  	end    
})

_G.Magnitude = 5
_G.Enabled = true

-- DONT TOUCH ANYTHING BELOW THIS

local player = game.Players.LocalPlayer
local mouse = player:GetMouse()

local rightLeg = player.Character["Right Leg"]
local leftLeg = player.Character["Left Leg"]
local leftArm = player.Character["Left Arm"]
local rightArm = player.Character["Right Arm"]
local torso = player.Character.Torso
local head = player.Character.Head

local function fireTouch()
    if _G.Path ~= nil and _G.Enabled == true then
        for _, obj in pairs(_G.Path:GetChildren()) do
            if obj:IsA("BasePart") and obj.Name == "MPS" then -- Changed to "MPS"
                local distanceRightLeg = (obj.Position - rightLeg.Position).magnitude
                local distanceLeftLeg = (obj.Position - leftLeg.Position).magnitude

                if distanceRightLeg <= _G.Magnitude or distanceLeftLeg <= _G.Magnitude then
                    -- Trigger interactions for both feet
                    if distanceRightLeg <= _G.Magnitude then
                        firetouchinterest(rightLeg, obj, 0)
                        wait()
                        firetouchinterest(rightLeg, obj, 1)
                    end

                    if distanceLeftLeg <= _G.Magnitude then
                        firetouchinterest(leftLeg, obj, 0)
                        wait()
                        firetouchinterest(leftLeg, obj, 1)
                    end
                end
            end
        end
    end
end

local function checkForNewBalls()
    while true do
        wait(1) -- Adjust the interval as needed
        if _G.Enabled == true then
            local ballsFolder = game.Workspace:FindFirstChild("Pitch")
            if ballsFolder then
                ballsFolder = ballsFolder:FindFirstChild("Balls")
                if ballsFolder then
                    for _, obj in pairs(ballsFolder:GetChildren()) do
                        if obj:IsA("BasePart") and obj.Name == "MPS" then -- Changed to "MPS"
                            _G.Path = ballsFolder -- Set to Balls folder containing MPS parts
                            fireTouch()
                        end
                    end
                end
            end
        end
    end
end

local function main()
    mouse.KeyDown:Connect(function()
        if _G.Enabled == true then
            fireTouch()
        end
    end)

    spawn(checkForNewBalls)
end

_G.Path = game.Workspace:FindFirstChild("Pitch"):FindFirstChild("Balls")
main()


Tab:AddButton({
	Name = "URFL",
	Callback = function()
      		print("In Development!")
  	end    
})

_G.Magnitude = 5
_G.Enabled = true

-- DONT TOUCH ANYTHING BELOW THIS

local player = game.Players.LocalPlayer
local mouse = player:GetMouse()

local rightLeg = player.Character["Right Leg"]
local leftLeg = player.Character["Left Leg"]
local leftArm = player.Character["Left Arm"]
local rightArm = player.Character["Right Arm"]
local torso = player.Character.Torso
local head = player.Character.Head

local function fireTouch()
    if _G.Path ~= nil and _G.Enabled == true then
        for _, obj in pairs(_G.Path:GetChildren()) do
            if obj:IsA("BasePart") and obj.Name == "URFL" then -- Changed to "URFL"
                local distanceRightLeg = (obj.Position - rightLeg.Position).magnitude
                local distanceLeftLeg = (obj.Position - leftLeg.Position).magnitude

                if distanceRightLeg <= _G.Magnitude or distanceLeftLeg <= _G.Magnitude then
                    -- Trigger interactions for both feet
                    if distanceRightLeg <= _G.Magnitude then
                        firetouchinterest(rightLeg, obj, 0)
                        wait()
                        firetouchinterest(rightLeg, obj, 1)
                    end

                    if distanceLeftLeg <= _G.Magnitude then
                        firetouchinterest(leftLeg, obj, 0)
                        wait()
                        firetouchinterest(leftLeg, obj, 1)
                    end
                end
            end
        end
    end
end

local function checkForNewBalls()
    while true do
        wait(1) -- Adjust the interval as needed
        if _G.Enabled == true then
            local ballsFolder = game.Workspace:FindFirstChild("Pitch")
            if ballsFolder then
                ballsFolder = ballsFolder:FindFirstChild("Balls")
                if ballsFolder then
                    for _, obj in pairs(ballsFolder:GetChildren()) do
                        if obj:IsA("BasePart") and obj.Name == "URFL" then -- Changed to "URFL"
                            _G.Path = ballsFolder -- Set to Balls folder containing URFL parts
                            fireTouch()
                        end
                    end
                end
            end
        end
    end
end

local function main()
    mouse.KeyDown:Connect(function()
        if _G.Enabled == true then
            fireTouch()
        end
    end)

    spawn(checkForNewBalls)
end

_G.Path = game.Workspace:FindFirstChild("Pitch"):FindFirstChild("Balls")
main()

Tab:AddButton({
	Name = "VRF",
	Callback = function()
      		print("In Development!")
  	end    
})

_G.Magnitude = 5
_G.Enabled = true

-- DONT TOUCH ANYTHING BELOW THIS

local player = game.Players.LocalPlayer
local mouse = player:GetMouse()

local rightLeg = player.Character["Right Leg"]
local leftLeg = player.Character["Left Leg"]

local function fireTouch()
    if _G.Path ~= nil and _G.Enabled == true then
        for _, obj in pairs(_G.Path:GetChildren()) do
            if obj:IsA("BasePart") and obj.Name == "VRF" then
                local distanceRightLeg = (obj.Position - rightLeg.Position).magnitude
                local distanceLeftLeg = (obj.Position - leftLeg.Position).magnitude

                -- Trigger interactions only if within _G.Magnitude range
                if distanceRightLeg <= _G.Magnitude then
                    firetouchinterest(rightLeg, obj, 0)
                    wait()
                    firetouchinterest(rightLeg, obj, 1)
                end

                if distanceLeftLeg <= _G.Magnitude then
                    firetouchinterest(leftLeg, obj, 0)
                    wait()
                    firetouchinterest(leftLeg, obj, 1)
                end
            end
        end
    end
end

local function checkForNewBalls()
    while true do
        wait(1) -- Adjust the interval as needed
        if _G.Enabled == true then
            local ballsFolder = game.Workspace:FindFirstChild("Balls")
            if ballsFolder then
                _G.Path = ballsFolder -- Set to Balls folder containing VRF parts
            end
        end
    end
end

local function main()
    mouse.KeyDown:Connect(function()
        if _G.Enabled == true then
            fireTouch()
        end
    end)

    spawn(checkForNewBalls)
end

_G.Path = game.Workspace:FindFirstChild("Balls")
main()


print ("SOME ASPECTS MAY BE BUGGY AKA FIRETOUCH AS IT'S IN DEVELOPMENT")

print("Script Executed!")

OrionLib:Init()
